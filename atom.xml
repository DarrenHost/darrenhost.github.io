<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://darrenvip.github.io</id>
    <title>Darren.X Factory</title>
    <updated>2020-09-07T06:16:51.091Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://darrenvip.github.io"/>
    <link rel="self" href="https://darrenvip.github.io/atom.xml"/>
    <subtitle>给岁月以文明，而不是给文明以岁月 - 刘慈欣</subtitle>
    <logo>https://darrenvip.github.io/images/avatar.png</logo>
    <icon>https://darrenvip.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Darren.X Factory</rights>
    <entry>
        <title type="html"><![CDATA[树莓派使用蓝牙设置wifi网络]]></title>
        <id>https://darrenvip.github.io/post/shu-mei-pai-shi-yong-lan-ya-she-zhi-wifi-wang-luo/</id>
        <link href="https://darrenvip.github.io/post/shu-mei-pai-shi-yong-lan-ya-she-zhi-wifi-wang-luo/">
        </link>
        <updated>2020-09-07T01:44:18.000Z</updated>
        <content type="html"><![CDATA[<p>在树莓派使用过程中，很多人都有遇到过这样的问题，经常由于工作场所变化，在无显示器和鼠标的情况下无法方便快捷对树莓派设置wifi网络。</p>
<p>在物联网场景下，成熟的方案是使用蓝牙为设备设置网络，在本教程中，我想向您展示一种简单的方法，可以通过蓝牙仅使用Android手机为Raspberry Pi配置Wi-Fi网络。</p>
<h2 id="所需材料">所需材料</h2>
<p>首先，您需要：</p>
<ul>
<li>树莓派3</li>
<li>Android手机</li>
<li>Python脚本</li>
</ul>
<h2 id="1-在raspbian上安装bluez">1 在Raspbian上安装Bluez</h2>
<p>首先从Raspbian终端输入以下命令，安装Python蓝牙库Bluez：</p>
<pre><code class="language-key">
$ sudo apt-get install python-bluez

</code></pre>
<h2 id="2-启动bluetooh-守护程序">2 启动Bluetooh 守护程序</h2>
<p>通过输入以下命令来编辑 /etc/systemd/system/dbus-org.bluez.service</p>
<pre><code class="language-key">
$ sudo nano /etc/systemd/system/dbus-org.bluez.service

</code></pre>
<p>并修改 ExecStart 参数<br>
ExecStart = / usr / lib / bluetooth / bluetoothd –C</p>
<h2 id="3-加载串口配置">3 加载串口配置</h2>
<pre><code class="language-key">
$ sudo sdptool add SP

</code></pre>
<h2 id="4-重启树莓派">4 重启树莓派</h2>
<pre><code class="language-key">
$ sudo reboot

</code></pre>
<h2 id="5-将pi的蓝牙与android配对">5 将Pi的蓝牙与Android配对</h2>
<p>打开手机的蓝牙，然后将手机与Raspberry Pi配对。接下来，在您的Pi上输入：</p>
<pre><code class="language-key">
$ bluetoothctl
power on
discoverable on
scan on

</code></pre>
<p>您的手机将出现在可用设备列表中。信任并配对。</p>
<pre><code class="language-key">
$ trust &lt;PHONE_ADDRESS&gt;
$ pair  &lt;PHONE_ADDRESS&gt;

</code></pre>
<p>要退出Bluetooth ctl，请输入quit命令：</p>
<p>如果发现可以使用Raspbian的UI轻松设置蓝牙，则也可以跳过上述设置。通过</p>
<h2 id="6-蓝牙配对后通过键入nano命令并复制粘贴源代码将python脚本直接添加到raspbian中并执行">6 蓝牙配对后，通过键入nano命令并复制/粘贴源代码将Python脚本直接添加到Raspbian中并执行：</h2>
<pre><code class="language-key">
#!/usr/bin/env python
import os
from bluetooth import *
from wifi import Cell, Scheme
import subprocess
import time
wpa_supplicant_conf = &quot;/etc/wpa_supplicant/wpa_supplicant.conf&quot;
sudo_mode = &quot;sudo &quot;
def wifi_connect(ssid, psk):
   # write wifi config to file
   cmd = 'wpa_passphrase {ssid} {psk} | sudo tee -a {conf} &gt; /dev/null'.format(
           ssid=str(ssid).replace('!', '\!'),
           psk=str(psk).replace('!', '\!'),
           conf=wpa_supplicant_conf
       )
   cmd_result = &quot;&quot;
   cmd_result = os.system(cmd)
   print cmd + &quot; - &quot; + str(cmd_result)

   # reconfigure wifi
   cmd = sudo_mode + 'wpa_cli -i wlan0 reconfigure'
   cmd_result = os.system(cmd)
   print cmd + &quot; - &quot; + str(cmd_result)

   time.sleep(10)

   cmd = 'iwconfig wlan0'
   cmd_result = os.system(cmd)
   print cmd + &quot; - &quot; + str(cmd_result)

   cmd = 'ifconfig wlan0'
   cmd_result = os.system(cmd)
   print cmd + &quot; - &quot; + str(cmd_result)

   p = subprocess.Popen(['hostname', '-I'], stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE)

   out, err = p.communicate()

   if out:
       ip_address = out
   else:
       ip_address = &quot;&lt;Not Set&gt;&quot;
   return ip_address

def ssid_discovered():
   Cells = Cell.all('wlan0')
   wifi_info = 'Found ssid : \n'
   for current in range(len(Cells)):
       wifi_info +=  Cells[current].ssid + &quot;\n&quot;
   wifi_info+=&quot;!&quot;
   print wifi_info
   return wifi_info
def handle_client(client_sock) :
   # get ssid
   client_sock.send(ssid_discovered())
   print &quot;Waiting for SSID...&quot;
   ssid = client_sock.recv(1024)
   if ssid == '' :
       return

   print &quot;ssid received&quot;
   print ssid

   # get psk
   client_sock.send(&quot;waiting-psk!&quot;)
   print &quot;Waiting for PSK...&quot;
   psk = client_sock.recv(1024)
   if psk == '' :
       return

   print &quot;psk received&quot;
   print psk

   ip_address = wifi_connect(ssid, psk)
   print &quot;ip address: &quot; + ip_address
   client_sock.send(&quot;ip-address:&quot; + ip_address + &quot;!&quot;)
   return
try:
   while True:
       server_sock=BluetoothSocket( RFCOMM )
       server_sock.bind((&quot;&quot;,PORT_ANY))
       server_sock.listen(1)

       port = server_sock.getsockname()[1]

       uuid = &quot;815425a5-bfac-47bf-9321-c5ff980b5e11&quot;
       advertise_service( server_sock, &quot;RPi Wifi config&quot;,
                          service_id = uuid,
                          service_classes = [ uuid, SERIAL_PORT_CLASS ],
                          profiles = [ SERIAL_PORT_PROFILE ])


       print &quot;Waiting for connection on RFCOMM channel %d&quot; % port

       client_sock, client_info = server_sock.accept()
       print &quot;Accepted connection from &quot;, client_info

       handle_client(client_sock)

       client_sock.close()
       server_sock.close()

       # finished config
       print 'Finished configuration\n'
except (KeyboardInterrupt, SystemExit):
   print '\nExiting\n'

</code></pre>
<p>接下来，您可以运行脚本</p>
<pre><code>$ chmod +x run.py
$ sudo python run.py

</code></pre>
<h2 id="7-现在您需要打开android-串口调试工具bluetoothserial设置wifi">7 现在您需要打开android 串口调试工具（BluetoothSerial）设置WIFI。</h2>
<p>在蓝牙配对设备中选择Raspberry Pi。输入SSID，PSK，然后点击开始配置按钮。在几秒钟内，您的Raspberry Pi的Wi-Fi应该会连接。</p>
<p>现在你可以通过蓝牙设置你的树莓派网络了，你也可以把脚本加到启动项，这样保证每次开机自动启动设置WIFI网络的 蓝牙服务</p>
<h2 id="8-编辑etcrclocal-添加启动时运行此脚本">8 编辑/etc/rc.local 添加启动时运行此脚本</h2>
<pre><code>(sleep 10;/path/to/script/./run.py)&amp;

</code></pre>
<p>😊done ...</p>
<p></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello World]]></title>
        <id>https://darrenvip.github.io/post/hello-world/</id>
        <link href="https://darrenvip.github.io/post/hello-world/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>